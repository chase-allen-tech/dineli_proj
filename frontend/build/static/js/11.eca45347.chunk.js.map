{"version":3,"sources":["config/abi.js","services/crypto.js","views/Admin/AdminTransaction.js","redux/actions/user.js","redux/actions/order.js"],"names":["CONTRACT_ABI","transferToken","endpoint","privateKey","fromAddress","toAddress","tokenAddress","tokenAmount","chainId","a","web3","Web3","providers","HttpProvider","gasLimit","utils","toHex","contract","eth","Contract","toWei","encoded","methods","transfer","encodeABI","tx","to","data","accounts","signTransaction","signed","sendSignedTransaction","rawTransaction","receipt","console","log","success","AdminTransaction","props","dispatch","useDispatch","useState","modalIndex","setModalIndex","transactions","setTransactions","processing","setProcessing","users","useSelector","state","user","userData","orders","order","orderData","credentials","credential","credentialData","useEffect","actionUserList","actionOrderList","length","ordersClone","Array","isArray","details","JSON","parse","push","onTransferSubmit","newTransactions","i","transaction","transactionClone","Object","assign","status","isError","j","detail","payload","walletPublicKey","tokenQuantity","blockchainId","infuraProjectEndpoint","walletPrivateKey","transferResult","transactionHash","id","userId","totalPrice","count","paymentMethod","stringify","actionOrderUpdate","className","style","width","bottom","delay","textAlign","type","onClick","disabled","labelposition","border","borderRadius","Row","fontSize","margin","Col","span","src","alt","height","Table","striped","hover","variant","minWidth","map","key","key1","rowSpan","find","username","signatureId","hash","Modal","show","onHide","Header","Title","Body","onSubmit","walletAddress","name","value","hidden","readOnly","step","required","placeholder","Footer","token","localStorage","getItem","actionUserCreate","tokenData","callPost","then","response","Notification","title","message","ACTION_USER_ADD","catch","err","error","callGet","result","ACTION_USER_LIST","ACTION_USER_LIST_FAIL","actionUserUpdate","ACTION_USER_UPDATE","actionUserUpdateCard","cardData","actionAuthUpdateCard","card","actionUserSetCurrent","ACTION_USER_SET_CURRENT","actionOrderCreate","ACTION_ORDER_ADD","removeItem","ACTION_ORDER_LIST","ACTION_ORDER_LIST_FAIL","actionUserOrderGet","ID","res","ACTION_USER_ORDER_GET","ACTION_ORDER_GET_FAIL"],"mappings":"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","file":"static/js/11.eca45347.chunk.js","sourcesContent":["export const CONTRACT_ABI = [\r\n  {\r\n    \"inputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"account\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint8\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint8\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"subtractedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"decreaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"addedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"increaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n];","import Web3 from 'web3';\r\nimport { CONTRACT_ABI } from '../config/abi';\r\n\r\nexport const tokenInfo = async (endpoint, tokenAddress) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  const contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n  const tokenName = await contract.methods.symbol().call();\r\n  return tokenName;\r\n}\r\n\r\nfunction financialBalance(numMfil) {\r\n  return Number.parseFloat(numMfil / 1e18).toFixed(18);\r\n}\r\n\r\nexport const balanceAvailable = async (endpoint, fromAddress, tokenAddress, tokenAmount) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  let contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n  let balance = await contract.methods.balanceOf(fromAddress).call();\r\n  console.log('[balance]', financialBalance(balance), tokenAmount)\r\n  if(financialBalance(balance) < parseFloat(tokenAmount)) {\r\n    return false;\r\n  } \r\n  return true;\r\n}\r\n\r\nexport const transferToken = async (endpoint, privateKey, fromAddress, toAddress, tokenAddress, tokenAmount, chainId) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  const gasLimit = web3.utils.toHex(6200000);\r\n\r\n  try {\r\n\r\n    let contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n\r\n    // # of transactions in my account\r\n    // let count = await web3.eth.getTransactionCount(fromAddress);\r\n    // console.log('Number of transactions so far in my account: ', count);\r\n\r\n    // My balance\r\n    // let balance = await contract.methods.balanceOf(fromAddress).call();\r\n    // console.log('Balance before send: ', financialBalance(balance));\r\n    \r\n    // if(balance < tokenAmount) return { success: false };\r\n    tokenAmount = web3.utils.toWei(tokenAmount, 'ether')\r\n\r\n    let encoded = contract.methods.transfer(toAddress, tokenAmount).encodeABI();\r\n    let tx = {\r\n      gasLimit: gasLimit,\r\n      to: tokenAddress,\r\n      data: encoded,\r\n      chainId: chainId\r\n    };\r\n\r\n    let signed = await web3.eth.accounts.signTransaction(tx, privateKey);\r\n    let receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\r\n\r\n    console.log('[transfer result]', receipt);\r\n    return { success: true, data: receipt};\r\n  } catch (err) {\r\n    console.log('[err]', err);\r\n    return { success: false };\r\n  }\r\n}","import React, { Fragment, useEffect, useState } from \"react\"\r\nimport { Button, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { Modal, Table as TableBs } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionUserList } from \"../../redux/actions/user\";\r\n\r\nimport { transferToken } from \"../../services/crypto\";\r\nimport { actionOrderList, actionOrderUpdate } from \"../../redux/actions/order\";\r\n\r\nconst AdminTransaction = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [modalIndex, setModalIndex] = useState(-1);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const users = useSelector(state => state.user.userData);\r\n  const orders = useSelector(state => state.order.orderData);\r\n  const credentials = useSelector(state => state.credential.credentialData);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionUserList());\r\n    dispatch(actionOrderList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!orders.length) return;\r\n\r\n    let ordersClone = [];\r\n    for (let order of orders) {\r\n      if (!Array.isArray(order.details)) {\r\n        order.details = JSON.parse(order.details);\r\n      }\r\n      ordersClone.push(order);\r\n    }\r\n\r\n    setTransactions(ordersClone);\r\n  }, [orders]);\r\n\r\n  const onTransferSubmit = async () => {\r\n    setProcessing(true);\r\n    let newTransactions = [];\r\n    for (let i = 0; i < transactions.length; i++) {\r\n      const transaction = transactions[i];\r\n      let transactionClone = Object.assign({}, transaction);\r\n\r\n      if (transaction.status == 'complete') {\r\n        newTransactions.push(transactionClone);\r\n        continue;\r\n      }\r\n\r\n      let isError = false;\r\n      for (let j = 0; j < transaction.details.length; j++) {\r\n        const detail = transaction.details[j];\r\n        const payload = {\r\n          fromAddress: credentials[0].walletPublicKey,\r\n          toAddress: detail.toAddress,\r\n          tokenAddress: detail.tokenAddress,\r\n          tokenAmount: detail.tokenQuantity,\r\n          chainId: credentials[0].blockchainId,\r\n        }\r\n\r\n        console.log('[payload]', payload);\r\n\r\n        let transferResult = await transferToken(credentials[0]?.infuraProjectEndpoint, credentials[0]?.walletPrivateKey, payload.fromAddress, payload.toAddress, payload.tokenAddress, payload.tokenAmount, payload.chainId)\r\n        if (transferResult.success) {\r\n          console.log(transferResult.data);\r\n          transactionClone.details[j]['hash'] = transferResult.data.transactionHash;\r\n        } else {\r\n          isError = true;\r\n          console.log(transferResult);\r\n        }\r\n      }\r\n\r\n      if (!isError) {\r\n        transactionClone.status = 'complete';\r\n      }\r\n\r\n      newTransactions.push(transactionClone);\r\n\r\n      const payload = {\r\n        id: transactionClone.id,\r\n        userId: transactionClone.userId,\r\n        status: transactionClone.status,\r\n        totalPrice: transactionClone.totalPrice,\r\n        count: transactionClone.count,\r\n        paymentMethod: transactionClone.paymentMethod,\r\n        details: JSON.stringify(transactionClone.details)\r\n      }\r\n\r\n      dispatch(actionOrderUpdate(payload));\r\n    }\r\n\r\n    setTransactions(newTransactions);\r\n    setProcessing(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <h1 style={{ textAlign: \"center\" }} className='d-font-bold d-text-90 d-white'>Transaction</h1>\r\n          <div className=\"d-flex\">\r\n            <Button type=\"outlined\" className=\"ms-auto\" onClick={onTransferSubmit} disabled={processing}>\r\n              {\r\n                processing ? \"Processing\" : \"Complete Transactions\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          <div className=\"login-ruleForm mt-4\" labelposition={\"top\"} style={{ border: \"2px solid #03ffa4\", borderRadius: \"10px 10px 0 0\" }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 0 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">List</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"w-100 overflow-auto\">\r\n              <TableBs striped hover variant=\"dark\" style={{ margin: 0 }} className=\"text-center\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"bg-secondary\">#</th>\r\n                    <th className=\"bg-secondary\">Status</th>\r\n                    <th className=\"bg-secondary\">User</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Total Price</th>\r\n                    <th className=\"bg-secondary\">Count</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Payment Method</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Signature ID</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Token Address</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Target Wallet Address</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Token Quantity</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Transaction Hash</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    transactions.map((transaction, key) =>\r\n                      <Fragment key={key}>\r\n                        {\r\n                          transaction.details.map((detail, key1) =>\r\n                            <tr key={key1} className=\"align-middle\">\r\n                              {\r\n                                key1 === 0 &&\r\n                                <>\r\n                                  <td rowSpan={transaction.details.length}>{key + 1}</td>\r\n                                  <td rowSpan={transaction.details.length}>\r\n                                    {\r\n                                      transaction.status === 'pending' ? \r\n                                      <div className=\"badge bg-primary\">{transaction.status}</div>\r\n                                      :\r\n                                      <div className=\"badge bg-secondary\">{transaction.status}</div>\r\n                                    }\r\n                                    \r\n                                  </td>\r\n                                  <td rowSpan={transaction.details.length}>{users.find(user => user.id === transaction.userId)?.username}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.totalPrice}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.count}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.paymentMethod}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.signatureId}</td>\r\n                                </>\r\n                              }\r\n                              <td>{detail.tokenAddress}</td>\r\n                              <td>{detail.toAddress}</td>\r\n                              <td>{detail.tokenQuantity}</td>\r\n                              <td>{detail?.hash}</td>\r\n                            </tr>)\r\n                        }\r\n                      </Fragment>\r\n                    )\r\n                  }\r\n                </tbody>\r\n              </TableBs>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </div>\r\n\r\n      <Modal show={modalIndex >= 0} onHide={() => setModalIndex(-1)}>\r\n        <Modal.Header>\r\n          <Modal.Title>Transfer Token</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={onTransferSubmit}>\r\n            <div className=\"form-group\">\r\n              <div><b>From:</b> {credentials[0]?.walletPublicKey}</div>\r\n              <div><b>To:</b> {users[modalIndex]?.walletAddress}</div>\r\n\r\n              <input name=\"fromAddress\" value={credentials[0]?.walletPublicKey || ''} hidden readOnly />\r\n              <input name=\"toAddress\" value={users[modalIndex]?.walletAddress || ''} hidden readOnly />\r\n            </div>\r\n            <div className=\"form-group mt-2\">\r\n              <label>Token:</label>\r\n              <select className=\"form-select\" name=\"tokenAddress\">\r\n                {\r\n                  // tokens?.map((token, key) => <option key={key} value={token.tokenAddress}>{token.tokenAddress}</option>)\r\n                }\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"d-flex\">\r\n                <input type=\"number\" className=\"form-control\" step=\"any\" name=\"tokenAmount\" required placeholder=\"Input the amount to transfer\" />\r\n                <button type=\"submit\" className=\"btn btn-secondary ms-2\" >Send</button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setModalIndex(-1)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminTransaction;","import {\r\n  ACTION_USER_ADD,\r\n  ACTION_USER_LIST,\r\n  ACTION_USER_LIST_FAIL,\r\n  ACTION_USER_SET_CURRENT,\r\n  ACTION_USER_UPDATE\r\n} from '../actionTypes/user'\r\nimport { actionAuthUpdateCard } from './auth'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionUserCreate = (tokenData) => (dispatch) => {\r\n  callPost('/api/admin/user', tokenData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_ADD,\r\n        payload: tokenData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserList = (count) => (dispatch) => {\r\n  return callGet(`/api/user?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_USER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_USER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdate = (userData) => dispatch => {\r\n  callPost('/api/admin/user/update', userData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_UPDATE,\r\n        payload: userData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdateCard = (cardData) => dispatch => {\r\n  callPost('/api/admin/user/update/card', cardData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch(actionAuthUpdateCard(cardData.card));\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n} \r\n\r\nexport const actionUserSetCurrent = (user) => dispatch => {\r\n  dispatch({\r\n    type:ACTION_USER_SET_CURRENT,\r\n    payload: user\r\n  })\r\n}","import {\r\n  ACTION_ORDER_ADD,\r\n  ACTION_ORDER_LIST,\r\n  ACTION_ORDER_LIST_FAIL,\r\n  ACTION_ORDER_GET,\r\n  ACTION_ORDER_GET_FAIL,\r\n  ACTION_USER_ORDER_GET,\r\n} from '../actionTypes/order'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionOrderCreate = (orderData) => (dispatch) => {\r\n  callPost('/api/admin/order', orderData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'Order Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_ORDER_ADD,\r\n        payload: orderData,\r\n      })\r\n      localStorage.removeItem('cartProducts');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderList = (count) => (dispatch) => {\r\n  return callGet(`/api/order?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_ORDER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_ORDER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/order/id?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      return dispatch({\r\n        type: ACTION_ORDER_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_ORDER_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserOrderGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/order/uid?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      result = result.map(res=>{\r\n        return{...res, details:JSON.parse(res.details)}\r\n      })\r\n      // console.log('userOrder', ID, result);\r\n\r\n      return dispatch({\r\n        type: ACTION_USER_ORDER_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_ORDER_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderUpdate = (orderData) => dispatch => {\r\n  callPost('/api/admin/order/update', orderData, token)\r\n    .then((response) => {\r\n      // dispatch({\r\n      //   type: ACTION_ORDER_ADD,\r\n      //   payload: orderData,\r\n      // })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}"],"sourceRoot":""}