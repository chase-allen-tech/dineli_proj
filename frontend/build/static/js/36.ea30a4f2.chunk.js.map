{"version":3,"sources":["views/Admin/AdminTeamNew.js","redux/actions/team.js"],"names":["rules","name","required","message","trigger","job","AdminTeamNew","props","dispatch","useDispatch","history","useHistory","formRef","useRef","useState","content","avatar","form","setForm","imgFile","setImgFile","onFormChange","key","value","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","Item","label","prop","onChange","val","type","autoComplete","e","target","files","textAlign","onClick","current","validate","valid","token","localStorage","getItem","JSON","parse","formData","FormData","append","callPost","then","res","console","log","payload","Object","assign","data","imgPath","actionTeamCreate","push","catch","err","teamData","response","Notification","success","title","ACTION_TEAM_ADD","error","actionTeamList","count","callGet","result","ACTION_TEAM_LIST","ACTION_TEAM_LIST_FAIL"],"mappings":"oNAQMA,EAAQ,CACZC,KAAM,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BAA8BC,QAAS,SACzEC,IAAK,CAAC,CAAEH,UAAU,EAAMC,QAAS,mBAAoBC,QAAS,UAyGjDE,UAtGM,SAAAC,GAEnB,IAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAUC,mBAEhB,EAAwBC,mBAAS,CAC/Bb,KAAM,GACNI,IAAK,GACLU,QAAS,GACTC,OAAQ,KAJV,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAMMC,EAAe,SAACC,EAAKC,GACzBL,EAAQ,2BAAKD,GAAN,kBAAaK,EAAMC,MAwB5B,OACE,qBAAKC,UAAU,+EAAf,SACE,qBAAKC,MAAO,CAAEC,MAAO,OAArB,SACE,cAAC,IAAD,CAAMC,QAAM,EAACC,MAAO,IAApB,SACE,eAAC,OAAD,CAAMC,IAAKjB,EAASkB,MAAOb,EAAMjB,MAAOA,EAAO+B,WAAW,MAAMP,UAAU,6BAA6BQ,cAAe,MAAOP,MAAO,CAAEQ,OAAQ,oBAAqBC,OAAQ,GAAIC,aAAc,IAA7L,UACE,cAAC,SAAOC,IAAR,CAAYX,MAAO,CAAEY,SAAU,GAAIH,OAAQ,qBAA3C,SACE,cAAC,SAAOI,IAAR,CAAYC,KAAK,KAAjB,SACE,sBAAKf,UAAU,0CAA0CC,MAAO,CAAEU,aAAc,qBAAhF,UACE,qBAAKX,UAAU,OAAf,yBACA,qBAAKA,UAAU,yCAAf,SACE,qBAAKgB,IAAI,iBAAiBC,IAAI,OAAOhB,MAAO,CAAEiB,OAAQ,mBAM9D,qBAAKlB,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,OAAOC,KAAK,OAA7B,SACE,cAAC,QAAD,CAAOtB,MAAON,EAAKhB,KAAM6C,SAAU,SAAAC,GAAG,OAAI1B,EAAa,OAAQ0B,UAGnE,qBAAKvB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,MAAMC,KAAK,MAA5B,SACE,cAAC,QAAD,CAAOG,KAAK,MAAMzB,MAAON,EAAKZ,IAAKyC,SAAU,SAAAC,GAAG,OAAI1B,EAAa,MAAO0B,IAAME,aAAa,YAG/F,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,UAAUC,KAAK,UAAhC,SACE,cAAC,QAAD,CAAOtB,MAAON,EAAKF,QAAS+B,SAAU,SAAAC,GAAG,OAAI1B,EAAa,UAAW0B,UAGzE,qBAAKvB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,SAAjB,SACE,sBAAKpB,UAAU,2HAA2HC,MAAO,CAAEiB,OAAQ,IAA3J,UAEIvB,EAAU,qBAAKK,UAAU,sBAAf,SAAsCL,EAAQlB,OAAc,qBAAKuB,UAAU,sBAAsBC,MAAO,CAAEY,SAAU,IAAxD,eAGxE,uBAAOW,KAAK,OAAOF,SArElB,SAAAI,GACnB9B,EAAW8B,EAAEC,OAAOC,MAAM,KAoEmC5B,UAAU,gEAI3D,qBAAKA,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWlB,MAAO,CAAE4B,UAAW,UAA/B,SACE,cAAC,SAAD,CAAQL,KAAK,UAAUM,QAnExB,WACf1C,EAAQ2C,QAAQC,UAAS,SAAAC,GACvB,IAAKA,IAAUtC,EAAS,OAAO,EAE/B,IAAMuC,EAAQC,aAAaC,QAAQ,QAAUC,KAAKC,MAAMH,aAAaC,QAAQ,SAAhC,YAA0D,KACjGG,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAO9C,EAASA,EAAQlB,MAExCiE,YAAS,0BAA2BH,EAAUL,GAC3CS,MAAK,SAAAC,GACJC,QAAQC,IAAI,mBAAoBF,GAChC,IAAIG,EAAUC,OAAOC,OAAO,GAAIxD,GAChCsD,EAAQvD,OAASoD,EAAIM,KAAKC,QAC1BnE,EAASoE,YAAiBL,IAC1B7D,EAAQmE,KAAK,mBACZC,OAAM,SAAAC,GACPV,QAAQC,IAAI,sBAAuBS,UAmDzB,wC,iCCvGpB,kGAWMrB,EAAQC,aAAaC,QAAQ,QAAUC,KAAKC,MAAMH,aAAaC,QAAQ,SAAhC,YAA0D,KAE1FgB,EAAmB,SAACI,GAAD,OAAc,SAACxE,GAC7C0D,YAAS,kBAAmBc,EAAUtB,GACnCS,MAAK,SAACc,GACLC,eAAaC,QAAQ,CACnBC,MAAO,UACPjF,QAAS,mCACT6C,KAAM,YAERxC,EAAS,CACPwC,KAAMqC,IACNd,QAASS,OAEVF,OAAM,SAAAC,GACPV,QAAQC,IAAIS,GACZG,eAAaI,MAAM,CACjBF,MAAO,SACPjF,QAAS,oBACT6C,KAAM,iBAMDuC,EAAiB,SAACC,GAAD,OAAW,SAAChF,GACxC,OAAOiF,YAAQ,mBAAD,OAAoBD,IAC/BrB,MAAK,SAAUc,GACd,IAAIS,EAAST,EAASP,KACtBlE,EAAS,CACPwC,KAAM2C,IACNpB,QAASmB,OAGZZ,OAAM,SAACQ,GACN9E,EAAS,CACPwC,KAAM4C","file":"static/js/36.ea30a4f2.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Input, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { actionTeamCreate } from \"../../redux/actions/team\";\r\nimport { callPost } from \"../../services/axios\";\r\n\r\nconst rules = {\r\n  name: [{ required: true, message: 'Please input website title', trigger: 'blur' }],\r\n  job: [{ required: true, message: 'Please input job', trigger: 'blur' }],\r\n};\r\n\r\nconst AdminTeamNew = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const formRef = useRef();\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    job: '',\r\n    content: '',\r\n    avatar: '',\r\n  });\r\n\r\n  const [imgFile, setImgFile] = useState(null);\r\n\r\n  const onFileChange = e => {\r\n    setImgFile(e.target.files[0]);\r\n  }\r\n\r\n  const onFormChange = (key, value) => {\r\n    setForm({ ...form, [key]: value });\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      if (!valid || !imgFile) return false;\r\n\r\n      const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n      const formData = new FormData();\r\n      formData.append(\"img\", imgFile, imgFile.name);\r\n\r\n      callPost('/api/admin/image/upload', formData, token)\r\n        .then(res => {\r\n          console.log('[Image Uploaded]', res);\r\n          let payload = Object.assign({}, form);\r\n          payload.avatar = res.data.imgPath;\r\n          dispatch(actionTeamCreate(payload));\r\n          history.push('/admin/teams');\r\n        }).catch(err => {\r\n          console.log('[Image Upload Fail]', err);\r\n        })\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">Team Membar</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Name\" prop=\"name\">\r\n                    <Input value={form.name} onChange={val => onFormChange('name', val)} />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Job\" prop=\"job\">\r\n                    <Input type=\"job\" value={form.job} onChange={val => onFormChange('job', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Content\" prop=\"content\">\r\n                    <Input value={form.content} onChange={val => onFormChange('content', val)} />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Avatar\">\r\n                    <div className=\"bg-white d-flex rounded justify-content-center align-items-center position-relative overflow-hidden d-inline-block w-100\" style={{ height: 36 }}>\r\n                      {\r\n                        imgFile ? <div className=\"text-muted bg-white\">{imgFile.name}</div> : <div className=\"text-muted bg-white\" style={{ fontSize: 30 }}>+</div>\r\n                      }\r\n\r\n                      <input type=\"file\" onChange={onFileChange} className=\"position-absolute top-0 left-0 opacity-0 w-100 h-100\" />\r\n                    </div>\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Create</Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminTeamNew;","import {\r\n  ACTION_TEAM_ADD,\r\n  ACTION_TEAM_LIST,\r\n  ACTION_TEAM_LIST_FAIL,\r\n  ACTION_TEAM_GET,\r\n  ACTION_TEAM_GET_FAIL,\r\n} from '../actionTypes/team'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionTeamCreate = (teamData) => (dispatch) => {\r\n  callPost('/api/admin/team', teamData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_TEAM_ADD,\r\n        payload: teamData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionTeamList = (count) => (dispatch) => {\r\n  return callGet(`/api/team?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_TEAM_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_TEAM_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionTeamGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/team/id?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      return dispatch({\r\n        type: ACTION_TEAM_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_TEAM_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}"],"sourceRoot":""}