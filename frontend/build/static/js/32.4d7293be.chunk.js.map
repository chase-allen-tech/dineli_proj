{"version":3,"sources":["views/Admin/AdminBlogNew.js","redux/actions/blog.js"],"names":["rules","title","required","message","trigger","date","content","thumbnail","AdminBlogNew","props","dispatch","useDispatch","history","useHistory","formRef","useRef","user","useSelector","state","auth","useState","form","setForm","imgFile","setImgFile","onFormChange","key","value","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","Item","label","prop","onChange","val","type","autoComplete","name","e","target","files","textAlign","onClick","current","validate","valid","console","log","token","localStorage","getItem","JSON","parse","formData","FormData","append","callPost","then","res","payload","Object","assign","userId","id","data","imgPath","actionBlogCreate","push","catch","err","blogData","response","Notification","success","ACTION_BLOG_ADD","error","actionBlogList","count","callGet","result","ACTION_BLOG_LIST","ACTION_BLOG_LIST_FAIL"],"mappings":"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","file":"static/js/32.4d7293be.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Input, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { callPost } from \"../../services/axios\";\r\nimport { actionBlogCreate } from \"../../redux/actions/blog\";\r\n\r\nconst rules = {\r\n  title: [{ required: true, message: 'Please input title', trigger: 'blur' }],\r\n  date: [{ required: true, message: 'Please input date', trigger: 'blur' }],\r\n  content: [{ required: true, message: 'Please input content', trigger: 'blur' }],\r\n  thumbnail: [{ required: true, message: 'Please input thumbnail', trigger: 'blur' }],\r\n};\r\n\r\nconst AdminBlogNew = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const formRef = useRef();\r\n\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    date: '',\r\n    content: '',\r\n    thumbnail: ''\r\n  });\r\n\r\n  const [imgFile, setImgFile] = useState(null);\r\n\r\n  const onFormChange = (key, value) => {\r\n    setForm({ ...form, [key]: value });\r\n  }\r\n\r\n  const onFileChange = e => {\r\n    setImgFile(e.target.files[0]);\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      console.log(valid,imgFile)\r\n      if (!valid || !imgFile) return false;\r\n\r\n      const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n      const formData = new FormData();\r\n      formData.append(\"img\", imgFile, imgFile.name);\r\n\r\n      callPost('/api/admin/image/upload', formData, token)\r\n        .then(res => {\r\n          console.log('[Image Uploaded]', res);\r\n          let payload = Object.assign({}, form);\r\n          payload.userId = user.id;\r\n          payload.thumbnail = res.data.imgPath;\r\n          dispatch(actionBlogCreate(payload));\r\n          history.push('/admin/blogs');\r\n        }).catch(err => {\r\n          console.log('[Image Upload Fail]', err);\r\n        })\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">Blog Detail</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Title\" prop=\"title\">\r\n                    <Input value={form.title} onChange={val => onFormChange('title', val)} />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Date\" prop=\"date\">\r\n                    <Input type=\"date\" value={form.date} onChange={val => onFormChange('date', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Description\" prop=\"content\">\r\n                    <Input type=\"content\" value={form.content} onChange={val => onFormChange('content', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Thumbnail\">\r\n                    <div className=\"bg-white d-flex rounded justify-content-center align-items-center position-relative overflow-hidden d-inline-block w-100\" style={{ height: 36 }}>\r\n                      {\r\n                        imgFile ? <div className=\"text-muted bg-white\">{imgFile.name}</div> : <div className=\"text-muted bg-white\" style={{ fontSize: 30 }}>+</div>\r\n                      }\r\n\r\n                      <input type=\"file\" onChange={onFileChange} className=\"position-absolute top-0 left-0 opacity-0 w-100 h-100\" />\r\n                    </div>\r\n                  </Form.Item>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Create</Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminBlogNew;","import {\r\n  ACTION_BLOG_ADD,\r\n  ACTION_BLOG_LIST,\r\n  ACTION_BLOG_LIST_FAIL,\r\n  ACTION_BLOG_GET,\r\n  ACTION_BLOG_GET_FAIL,\r\n} from '../actionTypes/blog'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionBlogCreate = (blogData) => (dispatch) => {\r\n  callPost('/api/admin/blog', blogData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_BLOG_ADD,\r\n        payload: blogData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionBlogList = (count) => (dispatch) => {\r\n  return callGet(`/api/blog?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_BLOG_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_BLOG_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionBlogGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/blog/id?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      return dispatch({\r\n        type: ACTION_BLOG_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_BLOG_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}"],"sourceRoot":""}