{"version":3,"sources":["views/Admin/AdminFaqNew.js","redux/actions/faq.js"],"names":["rules","title","required","message","trigger","description","AdminFaqNew","props","dispatch","useDispatch","history","useHistory","formRef","useRef","user","useSelector","state","auth","useState","form","setForm","onFormChange","key","value","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","Item","label","prop","onChange","val","type","autoComplete","textAlign","onClick","current","validate","valid","payload","userId","id","actionFaqCreate","push","token","localStorage","getItem","JSON","parse","faqData","callPost","then","response","Notification","success","ACTION_FAQ_ADD","catch","err","console","log","error","actionFaqList","count","callGet","result","data","ACTION_FAQ_LIST","ACTION_FAQ_LIST_FAIL"],"mappings":"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","file":"static/js/35.10a68ee9.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport { Button, Form, Input, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { actionFaqCreate } from \"../../redux/actions/faq\";\r\n\r\nconst rules = {\r\n  title: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  description: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n};\r\n\r\nconst AdminFaqNew = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const formRef = useRef();\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  const onFormChange = (key, value) => {\r\n    setForm({ ...form, [key]: value });\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      if(!valid) return;\r\n      let payload = {\r\n        userId: user.id,\r\n        title: form.title,\r\n        description: form.description\r\n      }\r\n\r\n      dispatch(actionFaqCreate(payload));\r\n      history.push('/admin/faqs');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">Faq Detail</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Title\" prop=\"title\">\r\n                    <Input value={form.title} onChange={val => onFormChange('title', val)} />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Description\" prop=\"description\">\r\n                    <Input type=\"description\" value={form.description} onChange={val => onFormChange('description', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n               \r\n                <div className=\"col-md-12\">\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Create</Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminFaqNew;","import {\r\n  ACTION_FAQ_ADD,\r\n  ACTION_FAQ_LIST,\r\n  ACTION_FAQ_LIST_FAIL,\r\n  ACTION_FAQ_GET,\r\n  ACTION_FAQ_GET_FAIL,\r\n} from '../actionTypes/faq'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionFaqCreate = (faqData) => (dispatch) => {\r\n  callPost('/api/admin/faq', faqData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_FAQ_ADD,\r\n        payload: faqData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionFaqList = (count) => (dispatch) => {\r\n  return callGet(`/api/faq?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_FAQ_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_FAQ_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionFaqGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/faq/id?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      return dispatch({\r\n        type: ACTION_FAQ_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_FAQ_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}"],"sourceRoot":""}