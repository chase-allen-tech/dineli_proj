{"version":3,"sources":["views/Admin/AdminTransaction.js","redux/actions/user.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","config/abi.js","services/crypto.js","redux/actions/order.js"],"names":["AdminTransaction","props","dispatch","useDispatch","useState","modalIndex","setModalIndex","transactions","setTransactions","processing","setProcessing","users","useSelector","state","user","userData","orders","order","orderData","credentials","credential","credentialData","useEffect","actionUserList","actionOrderList","length","ordersClone","Array","isArray","details","JSON","parse","push","onTransferSubmit","a","newTransactions","i","transaction","transactionClone","Object","assign","status","isError","j","detail","payload","fromAddress","walletPublicKey","toAddress","tokenAddress","tokenAmount","tokenQuantity","chainId","blockchainId","console","log","transferToken","infuraProjectEndpoint","walletPrivateKey","transferResult","success","data","transactionHash","id","userId","totalPrice","count","paymentMethod","stringify","actionOrderUpdate","className","style","width","bottom","delay","textAlign","type","onClick","disabled","labelposition","border","borderRadius","Row","fontSize","margin","Col","span","src","alt","height","striped","hover","variant","minWidth","map","key","key1","rowSpan","find","username","signatureId","hash","show","onHide","Header","Title","Body","onSubmit","walletAddress","name","value","hidden","readOnly","step","required","placeholder","Footer","token","localStorage","getItem","actionUserCreate","tokenData","callPost","then","response","Notification","title","message","ACTION_USER_ADD","catch","err","error","callGet","result","ACTION_USER_LIST","ACTION_USER_LIST_FAIL","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","next","_e2","CONTRACT_ABI","endpoint","privateKey","web3","Web3","providers","HttpProvider","gasLimit","utils","toHex","contract","eth","Contract","toWei","encoded","methods","transfer","encodeABI","tx","to","accounts","signTransaction","signed","sendSignedTransaction","rawTransaction","receipt","actionOrderCreate","ACTION_ORDER_ADD","removeItem","ACTION_ORDER_LIST","ACTION_ORDER_LIST_FAIL"],"mappings":"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","file":"static/js/10.359554cb.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\r\nimport { Button, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { Modal, Table as TableBs } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionUserList } from \"../../redux/actions/user\";\r\n\r\nimport { transferToken } from \"../../services/crypto\";\r\nimport { actionOrderList, actionOrderUpdate } from \"../../redux/actions/order\";\r\n\r\nconst AdminTransaction = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [modalIndex, setModalIndex] = useState(-1);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const users = useSelector(state => state.user.userData);\r\n  const orders = useSelector(state => state.order.orderData);\r\n  const credentials = useSelector(state => state.credential.credentialData);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionUserList());\r\n    dispatch(actionOrderList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!orders.length) return;\r\n\r\n    let ordersClone = [];\r\n    for (let order of orders) {\r\n      if (!Array.isArray(order.details)) {\r\n        order.details = JSON.parse(order.details);\r\n      }\r\n      ordersClone.push(order);\r\n    }\r\n\r\n    setTransactions(ordersClone);\r\n  }, [orders]);\r\n\r\n  const onTransferSubmit = async () => {\r\n    setProcessing(true);\r\n    let newTransactions = [];\r\n    for (let i = 0; i < transactions.length; i++) {\r\n      const transaction = transactions[i];\r\n      let transactionClone = Object.assign({}, transaction);\r\n\r\n      if (transaction.status == 'complete') {\r\n        newTransactions.push(transactionClone);\r\n        continue;\r\n      }\r\n\r\n      let isError = false;\r\n      for (let j = 0; j < transaction.details.length; j++) {\r\n        const detail = transaction.details[j];\r\n        const payload = {\r\n          fromAddress: credentials[0].walletPublicKey,\r\n          toAddress: detail.toAddress,\r\n          tokenAddress: detail.tokenAddress,\r\n          tokenAmount: detail.tokenQuantity,\r\n          chainId: credentials[0].blockchainId,\r\n        }\r\n\r\n        console.log('[payload]', payload);\r\n\r\n        let transferResult = await transferToken(credentials[0]?.infuraProjectEndpoint, credentials[0]?.walletPrivateKey, payload.fromAddress, payload.toAddress, payload.tokenAddress, payload.tokenAmount, payload.chainId)\r\n        if (transferResult.success) {\r\n          console.log(transferResult.data);\r\n          transactionClone.details[j]['hash'] = transferResult.data.transactionHash;\r\n        } else {\r\n          isError = true;\r\n          console.log(transferResult);\r\n        }\r\n      }\r\n\r\n      if (!isError) {\r\n        transactionClone.status = 'complete';\r\n      }\r\n\r\n      newTransactions.push(transactionClone);\r\n\r\n      const payload = {\r\n        id: transactionClone.id,\r\n        userId: transactionClone.userId,\r\n        status: transactionClone.status,\r\n        totalPrice: transactionClone.totalPrice,\r\n        count: transactionClone.count,\r\n        paymentMethod: transactionClone.paymentMethod,\r\n        details: JSON.stringify(transactionClone.details)\r\n      }\r\n\r\n      dispatch(actionOrderUpdate(payload));\r\n    }\r\n\r\n    setTransactions(newTransactions);\r\n    setProcessing(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <h1 style={{ textAlign: \"center\" }} className='d-font-bold d-text-90 d-white'>Transaction</h1>\r\n          <div className=\"d-flex\">\r\n            <Button type=\"outlined\" className=\"ms-auto\" onClick={onTransferSubmit} disabled={processing}>\r\n              {\r\n                processing ? \"Processing\" : \"Complete Transactions\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          <div className=\"login-ruleForm mt-4\" labelposition={\"top\"} style={{ border: \"2px solid #03ffa4\", borderRadius: \"10px 10px 0 0\" }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 0 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">List</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"w-100 overflow-auto\">\r\n              <TableBs striped hover variant=\"dark\" style={{ margin: 0 }} className=\"text-center\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"bg-secondary\">#</th>\r\n                    <th className=\"bg-secondary\">Status</th>\r\n                    <th className=\"bg-secondary\">User</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Total Price</th>\r\n                    <th className=\"bg-secondary\">Count</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Payment Method</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Signature ID</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Token Address</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Target Wallet Address</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Token Quantity</th>\r\n                    <th className=\"bg-secondary\" style={{ minWidth: 130 }}>Transaction Hash</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    transactions.map((transaction, key) =>\r\n                      <Fragment key={key}>\r\n                        {\r\n                          transaction.details.map((detail, key1) =>\r\n                            <tr key={key1} className=\"align-middle\">\r\n                              {\r\n                                key1 === 0 &&\r\n                                <>\r\n                                  <td rowSpan={transaction.details.length}>{key + 1}</td>\r\n                                  <td rowSpan={transaction.details.length}>\r\n                                    {\r\n                                      transaction.status === 'pending' ? \r\n                                      <div className=\"badge bg-primary\">{transaction.status}</div>\r\n                                      :\r\n                                      <div className=\"badge bg-secondary\">{transaction.status}</div>\r\n                                    }\r\n                                    \r\n                                  </td>\r\n                                  <td rowSpan={transaction.details.length}>{users.find(user => user.id === transaction.userId)?.username}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.totalPrice}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.count}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.paymentMethod}</td>\r\n                                  <td rowSpan={transaction.details.length}>{transaction.signatureId}</td>\r\n                                </>\r\n                              }\r\n                              <td>{detail.tokenAddress}</td>\r\n                              <td>{detail.toAddress}</td>\r\n                              <td>{detail.tokenQuantity}</td>\r\n                              <td>{detail?.hash}</td>\r\n                            </tr>)\r\n                        }\r\n                      </Fragment>\r\n                    )\r\n                  }\r\n                </tbody>\r\n              </TableBs>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </div>\r\n\r\n      <Modal show={modalIndex >= 0} onHide={() => setModalIndex(-1)}>\r\n        <Modal.Header>\r\n          <Modal.Title>Transfer Token</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={onTransferSubmit}>\r\n            <div className=\"form-group\">\r\n              <div><b>From:</b> {credentials[0]?.walletPublicKey}</div>\r\n              <div><b>To:</b> {users[modalIndex]?.walletAddress}</div>\r\n\r\n              <input name=\"fromAddress\" value={credentials[0]?.walletPublicKey || ''} hidden readOnly />\r\n              <input name=\"toAddress\" value={users[modalIndex]?.walletAddress || ''} hidden readOnly />\r\n            </div>\r\n            <div className=\"form-group mt-2\">\r\n              <label>Token:</label>\r\n              <select className=\"form-select\" name=\"tokenAddress\">\r\n                {\r\n                  // tokens?.map((token, key) => <option key={key} value={token.tokenAddress}>{token.tokenAddress}</option>)\r\n                }\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <div className=\"d-flex\">\r\n                <input type=\"number\" className=\"form-control\" step=\"any\" name=\"tokenAmount\" required placeholder=\"Input the amount to transfer\" />\r\n                <button type=\"submit\" className=\"btn btn-secondary ms-2\" >Send</button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setModalIndex(-1)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminTransaction;","import {\r\n  ACTION_USER_ADD,\r\n  ACTION_USER_LIST,\r\n  ACTION_USER_LIST_FAIL,\r\n} from '../actionTypes/user'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionUserCreate = (tokenData) => (dispatch) => {\r\n  callPost('/api/admin/user', tokenData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_ADD,\r\n        payload: tokenData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserList = (count) => (dispatch) => {\r\n  return callGet(`/api/user?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_USER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_USER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export const CONTRACT_ABI = [\r\n  {\r\n    \"inputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"account\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint8\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint8\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"subtractedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"decreaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"addedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"increaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"constant\": true\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n];","import Web3 from 'web3';\r\nimport { CONTRACT_ABI } from '../config/abi';\r\n\r\nexport const tokenInfo = async (endpoint, tokenAddress) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  const contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n  const tokenName = await contract.methods.symbol().call();\r\n  return tokenName;\r\n}\r\n\r\nfunction financialBalance(numMfil) {\r\n  return Number.parseFloat(numMfil / 1e18).toFixed(18);\r\n}\r\n\r\nexport const balanceAvailable = async (endpoint, fromAddress, tokenAddress, tokenAmount) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  let contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n  let balance = await contract.methods.balanceOf(fromAddress).call();\r\n  console.log('[balance]', financialBalance(balance), tokenAmount)\r\n  if(financialBalance(balance) < parseFloat(tokenAmount)) {\r\n    return false;\r\n  } \r\n  return true;\r\n}\r\n\r\nexport const transferToken = async (endpoint, privateKey, fromAddress, toAddress, tokenAddress, tokenAmount, chainId) => {\r\n  const web3 = new Web3(new Web3.providers.HttpProvider(endpoint));\r\n  const gasLimit = web3.utils.toHex(6200000);\r\n\r\n  try {\r\n\r\n    let contract = new web3.eth.Contract(CONTRACT_ABI, tokenAddress);\r\n\r\n    // # of transactions in my account\r\n    // let count = await web3.eth.getTransactionCount(fromAddress);\r\n    // console.log('Number of transactions so far in my account: ', count);\r\n\r\n    // My balance\r\n    // let balance = await contract.methods.balanceOf(fromAddress).call();\r\n    // console.log('Balance before send: ', financialBalance(balance));\r\n    \r\n    // if(balance < tokenAmount) return { success: false };\r\n    tokenAmount = web3.utils.toWei(tokenAmount, 'ether')\r\n\r\n    let encoded = contract.methods.transfer(toAddress, tokenAmount).encodeABI();\r\n    let tx = {\r\n      gasLimit: gasLimit,\r\n      to: tokenAddress,\r\n      data: encoded,\r\n      chainId: chainId\r\n    };\r\n\r\n    let signed = await web3.eth.accounts.signTransaction(tx, privateKey);\r\n    let receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\r\n\r\n    console.log('[transfer result]', receipt);\r\n    return { success: true, data: receipt};\r\n  } catch (err) {\r\n    console.log('[err]', err);\r\n    return { success: false };\r\n  }\r\n}","import {\r\n  ACTION_ORDER_ADD,\r\n  ACTION_ORDER_LIST,\r\n  ACTION_ORDER_LIST_FAIL,\r\n  ACTION_ORDER_GET,\r\n  ACTION_ORDER_GET_FAIL,\r\n} from '../actionTypes/order'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionOrderCreate = (orderData) => (dispatch) => {\r\n  callPost('/api/admin/order', orderData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'Order Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_ORDER_ADD,\r\n        payload: orderData,\r\n      })\r\n      localStorage.removeItem('cartProducts');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderList = (count) => (dispatch) => {\r\n  return callGet(`/api/order?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_ORDER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_ORDER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderGet = (ID) => (dispatch) => {\r\n  return callGet(`/api/order/id?ID=${ID}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      return dispatch({\r\n        type: ACTION_ORDER_GET,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      return dispatch({\r\n        type: ACTION_ORDER_GET_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionOrderUpdate = (orderData) => dispatch => {\r\n  callPost('/api/admin/order/update', orderData, token)\r\n    .then((response) => {\r\n      // dispatch({\r\n      //   type: ACTION_ORDER_ADD,\r\n      //   payload: orderData,\r\n      // })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}"],"sourceRoot":""}