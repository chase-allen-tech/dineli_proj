{"version":3,"sources":["views/Admin/AdminDashboard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/Login.js"],"names":["rules","password","required","message","trigger","confirm","AdminDashboard","props","dispatch","useDispatch","formRef","useRef","user","useSelector","state","auth","useState","form","setForm","onFormChange","key","value","formClone","Object","assign","className","style","width","bottom","delay","textAlign","Row","Col","sm","md","ref","model","labelWidth","labelPosition","border","margin","borderRadius","fontSize","span","src","alt","height","Item","label","prop","type","onChange","val","autoComplete","onClick","current","validate","valid","Notification","error","title","payload","username","email","actionAuthResetNewPassword","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","mapDispatchToProps","actionAuthLogin","Login","connect","logged","handleSubmit","e","preventDefault","refs","this","resetFields","setState","display","marginLeft","float","marginRight","bind","marginTop","marginBottom","to","Component"],"mappings":"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","file":"static/js/36.66ed4fed.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Login from \"../Login\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { Button, Form, Input, Layout, Notification } from \"element-react\"\r\nimport { actionAuthResetNewPassword } from \"../../redux/actions/auth\";\r\n\r\nconst rules = {\r\n  password: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  confirm: [{ required: true, message: 'This field is required', trigger: 'blur' }]\r\n};\r\n\r\nconst AdminDashboard = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const formRef = useRef();\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const [form, setForm] = useState({\r\n    password: '',\r\n    confirm: '',\r\n  });\r\n\r\n  const onFormChange = (key, value) => {\r\n    let formClone = Object.assign({}, form);\r\n    formClone[key] = value;\r\n    setForm(formClone);\r\n  }\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      if(!valid) return;\r\n\r\n      if(form.password != form.confirm) {\r\n        Notification.error({\r\n          title: 'Failed',\r\n          message: 'Password does not match',\r\n          type: 'Warning',\r\n        })\r\n      }\r\n      \r\n      let payload = {\r\n        username: user.email,\r\n        password: form.password\r\n      }\r\n\r\n      dispatch(actionAuthResetNewPassword(payload));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <h1 style={{ textAlign: \"center\" }} className='d-font-bold d-text-90 d-white'>Welcome to Administrator Page</h1>\r\n          <Layout.Row>\r\n            <Layout.Col sm=\"24\" md={12}>\r\n              <div className=\"grid-content\">\r\n                <Login />\r\n              </div>\r\n            </Layout.Col>\r\n            <Layout.Col sm=\"24\" md={12}>\r\n              <div className=\"grid-content\">\r\n                <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n                  <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n                    <Layout.Col span=\"24\">\r\n                      <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                        <div className=\"ms-3\">Reset Password</div>\r\n                        <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                          <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                        </div>\r\n                      </div>\r\n                    </Layout.Col>\r\n                  </Layout.Row>\r\n\r\n                  <Form.Item label=\"Password\" prop=\"password\" className=\"m-3 mt-4\">\r\n                    <Input type=\"password\" value={form.password} onChange={val => onFormChange('password', val)} />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item label=\"Confirm\" prop=\"confirm\" className=\"m-3 mt-4\">\r\n                    <Input type=\"password\" value={form.confirm} onChange={val => onFormChange('confirm', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Save</Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </Layout.Col>\r\n          </Layout.Row>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Component } from \"react\"\r\nimport { Button, Checkbox, Form, Input, Layout } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { Link } from \"react-router-dom\"\r\nimport { actionAuthLogin } from \"../redux/actions/auth\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {logged} = state\r\n  return {\r\n    logged\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {actionAuthLogin}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(\r\n  class extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        form: {\r\n          password: '',\r\n          username: '',\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: 'Please input user name or email', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: 'Please input the password', trigger: 'blur' },\r\n          ]\r\n        }\r\n      }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      this.refs.form.validate((valid) => {\r\n        if (valid) {\r\n          // ===============action function======================\r\n          this.props.actionAuthLogin(this.state.form)\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n\r\n    handleReset(e) {\r\n      e.preventDefault()\r\n      this.refs.form.resetFields()\r\n    }\r\n\r\n    onChange(key, value) {\r\n      this.setState({\r\n        form: Object.assign({}, this.state.form, {[key]: value})\r\n      })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Form ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\"\r\n          className=\"login-ruleForm d-font-bold\"\r\n          labelPosition={\"top\"}\r\n          style={{border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10}}>\r\n          <Layout.Row style={{fontSize: 25, margin: \"-1px 0px 15px 0px\"}}>\r\n            <Layout.Col span=\"24\">\r\n              <div className=\"grid-content d-content-highlight\"\r\n                style={{borderRadius: \"10px 10px 1px 1px\"}}>\r\n                <div style={{display: \"inline\", marginLeft: 10}}>Login</div>\r\n                <div style={{float: \"right\", display: \"inline\"}}>\r\n                  <img src=\"imgs/logo3.png\" alt='logo' style={{height: \"35px\", marginRight: 20}}/>\r\n                </div>\r\n              </div>\r\n            </Layout.Col>\r\n          </Layout.Row>\r\n\r\n          <Form.Item label=\"USERNAME OR EMAIL ADDRESS\" prop=\"username\" style={{margin: 15}}>\r\n            <Input value={this.state.form.username}\r\n              onChange={this.onChange.bind(this, 'username')}/>\r\n          </Form.Item>\r\n          <Form.Item label=\"PASSWORD\" prop=\"password\" style={{margin: 15}}>\r\n            <Input type=\"password\" value={this.state.form.password}\r\n              onChange={this.onChange.bind(this, 'password')}\r\n              autoComplete=\"off\"/>\r\n          </Form.Item>\r\n          <div style={{textAlign: \"center\"}}>\r\n            <Checkbox>REMEMBER ME</Checkbox>\r\n          </div>\r\n          <Form.Item style={{textAlign: \"center\"}}>\r\n            <Button type=\"success\" onClick={this.handleSubmit}>LOGIN</Button>\r\n          </Form.Item>\r\n          <div style={{textAlign: \"center\", marginTop: -5, marginBottom: 15}}>\r\n            <Link to={\"/my-account/lost-password\"}>Lost your password?</Link>\r\n          </div>\r\n        </Form>\r\n      )\r\n    }\r\n  }\r\n)\r\n\r\nexport default Login"],"sourceRoot":""}