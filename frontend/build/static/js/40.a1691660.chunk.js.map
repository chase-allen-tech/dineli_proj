{"version":3,"sources":["views/Admin/AdminUserUpdate.js","redux/actions/user.js"],"names":["rules","citizen","required","message","trigger","walletAddress","email","username","phone","citizenOptions","key","label","activeOptions","roleOptions","typeOptions","AdminUserUpdate","props","user","useSelector","state","currentUser","useEffect","console","log","setImgFile","card","role","setForm","firstname","lastname","Number","isActive","find","type","useState","form","dispatch","useDispatch","history","useHistory","formRef","useRef","imgFile","onFormChange","value","formClone","Object","assign","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","zIndex","process","Item","prop","onChange","val","map","item","Option","textAlign","nativeType","onClick","e","preventDefault","current","validate","valid","payload","id","actionUserUpdate","push","token","localStorage","getItem","JSON","parse","actionUserCreate","tokenData","callPost","then","response","Notification","success","title","ACTION_USER_ADD","catch","err","error","actionUserList","count","callGet","result","data","ACTION_USER_LIST","ACTION_USER_LIST_FAIL","userData","ACTION_USER_UPDATE","actionUserUpdateCard","cardData","actionAuthUpdateCard","actionUserSetCurrent","ACTION_USER_SET_CURRENT"],"mappings":"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","file":"static/js/40.a1691660.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Form, Input, Layout, Select } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actionUserUpdate } from \"../../redux/actions/user\";\r\n\r\nconst rules = {\r\n    citizen: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n    walletAddress: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n    email: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n    username: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n    phone: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n};\r\n\r\nconst citizenOptions = [\r\n    { key: 0, label: \"No\" },\r\n    { key: 1, label: \"Yes\" }\r\n];\r\n\r\nconst activeOptions = [\r\n    { key: 0, label: \"No\" },\r\n    { key: 1, label: \"Yes\" }\r\n];\r\n\r\nconst roleOptions = [\r\n    { key: 1, label: \"USER\" },\r\n    { key: 2, label: \"MODERATOR\" },\r\n    { key: 3, label: \"ADMIN\" }\r\n];\r\n\r\nconst typeOptions = [\r\n    { key: 1, label: \"BASIC\" },\r\n    { key: 2, label: \"GOLD\" },\r\n    { key: 3, label: \"PREMIUM\" },\r\n];\r\n\r\nconst AdminUserUpdate = props => {\r\n    const user = useSelector(state => state.user.currentUser);\r\n\r\n    useEffect(() => {\r\n        console.log('update user', user);\r\n        setImgFile(user.card);\r\n        if (user.role)\r\n            setForm({\r\n                firstname: user.firstname,\r\n                lastname: user.lastname,\r\n                username: user.username,\r\n                phone: user.phone,\r\n                email: user.email,\r\n                citizen: Number(user.citizen),\r\n                isActive: user.isActive ? 1 : 0,\r\n                walletAddress: user.walletAddress,\r\n                role: roleOptions.find(role => role.label === user.role[0]).key,\r\n                type: user.type\r\n            });\r\n    }, [user]);\r\n\r\n    const [form, setForm] = useState({\r\n        \r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const formRef = useRef();\r\n    const [imgFile, setImgFile] = useState(user.card);\r\n\r\n    const onFormChange = (key, value) => {\r\n        let formClone = Object.assign({}, form);\r\n        formClone[key] = value;\r\n        // console.log('onformchange', value);\r\n        setForm(formClone);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        formRef.current.validate(valid => {\r\n            // if (!valid || !imgFile) return false;\r\n\r\n            let payload = Object.assign({}, form);\r\n            payload.id = user.id;\r\n            dispatch(actionUserUpdate(payload));\r\n            history.push('/admin/users');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n            <div style={{ width: '80%' }}>\r\n                <Fade bottom delay={200}>\r\n                    <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n                        <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n                            <Layout.Col span=\"24\">\r\n                                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                                    <div className=\"ms-3\">User Detail</div>\r\n                                    <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                                        <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                                    </div>\r\n                                </div>\r\n                            </Layout.Col>\r\n                        </Layout.Row>\r\n\r\n\r\n                        <div className=\"container-fluid\">\r\n                            <h3 className=\"my-3 text-white\">User Highlights</h3>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mt-4\">\r\n                                    <div className=\" zoom-image bg-white d-flex rounded justify-content-center align-items-center position-relative overflow-hidden d-inline-block w-100 bg-image hover-zoom\" style={{ height: '100%', zIndex:\"5\" }}>\r\n                                        {\r\n                                            imgFile ? <img src={`${process.env.REACT_APP_API_ENDPOINT}/public/${imgFile}`} className=\"w-100 h-100 img-thumbnail\" alt=\"img\"  /> : <img src=\"imgs/empty.png\" className=\"w-100 h-100 img-thumbnail\" alt=\"img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-4\">\r\n                                    <Form.Item label=\"First name\" prop=\"firstname\">\r\n                                        <Input type=\"text\" value={form.firstname} onChange={val => onFormChange('firstname', val)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Last name\" prop=\"lastname\">\r\n                                        <Input type=\"text\" value={form.lastname} onChange={val => onFormChange('lastname', val)} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"User name\" prop=\"username\">\r\n                                        <Input type=\"text\" value={form.username} onChange={val => onFormChange('username', val)} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"col-md-4 mt-4\">\r\n                                    <Form.Item label=\"Phone\" prop=\"phone\">\r\n                                        <Input type=\"text\" value={form.phone} onChange={val => onFormChange('phone', val)} />\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4 mt-4\">\r\n                                    <Form.Item label=\"email\" prop=\"email\">\r\n                                        <Input type=\"email\" value={form.email} onChange={val => onFormChange('email', val)} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"col-md-2 mt-4\">\r\n                                    <Form.Item label=\"Citizen\" prop=\"citizen\">\r\n                                        <Select className=\"w-100\" value={form.citizen} onChange={val => onFormChange('citizen', val)}>\r\n                                            {\r\n                                                citizenOptions.map(item => <Select.Option value={item.key} label={item.label}>{item.label}</Select.Option>)\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"col-md-2 mt-4\">\r\n                                    <Form.Item label=\"Active\" prop=\"squareFeet\">\r\n                                        <Select className=\"w-100\" value={form.isActive} onChange={val => onFormChange('isActive', val)}>\r\n                                            {\r\n                                                activeOptions.map(item => <Select.Option value={item.key} label={item.label}>{item.label}</Select.Option>)\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                {/*       -------------          new row       --------------      */}\r\n                                <div className=\"col-md-8 mt-4\">\r\n                                    <Form.Item label=\"Wallet address\" prop=\"walletAddress\">\r\n                                        <Input type=\"text\" value={form.walletAddress} onChange={val => onFormChange('walletAddress', val)} />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"col-md-2 mt-4\">\r\n                                    <Form.Item label=\"Role\" prop=\"neighborhood\">\r\n                                        <Select className=\"w-100\" value={form.role} onChange={val => onFormChange('role', val)}>\r\n                                            {\r\n                                                roleOptions.map(item => <Select.Option value={item.key} label={item.label}>{item.label}</Select.Option>)\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"col-md-2 mt-4\">\r\n                                    <Form.Item label=\"Type\" prop=\"neighborhood\">\r\n                                        <Select className=\"w-100\" value={form.type} onChange={val => onFormChange('type', val)}>\r\n                                            {\r\n                                                typeOptions.map(item => <Select.Option value={item.key} label={item.label}>{item.label}</Select.Option>)\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Form.Item style={{ textAlign: \"center\" }}>\r\n                            <Button type=\"primary\" nativeType=\"submit\" onClick={onSubmit}>Update</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminUserUpdate;","import {\r\n  ACTION_USER_ADD,\r\n  ACTION_USER_LIST,\r\n  ACTION_USER_LIST_FAIL,\r\n  ACTION_USER_SET_CURRENT,\r\n  ACTION_USER_UPDATE\r\n} from '../actionTypes/user'\r\nimport { actionAuthUpdateCard } from './auth'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionUserCreate = (tokenData) => (dispatch) => {\r\n  callPost('/api/admin/user', tokenData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_ADD,\r\n        payload: tokenData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserList = (count) => (dispatch) => {\r\n  return callGet(`/api/user?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_USER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_USER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdate = (userData) => dispatch => {\r\n  callPost('/api/admin/user/update', userData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_UPDATE,\r\n        payload: userData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdateCard = (cardData) => dispatch => {\r\n  callPost('/api/admin/user/update/card', cardData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch(actionAuthUpdateCard(cardData.card));\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n} \r\n\r\nexport const actionUserSetCurrent = (user) => dispatch => {\r\n  dispatch({\r\n    type:ACTION_USER_SET_CURRENT,\r\n    payload: user\r\n  })\r\n}"],"sourceRoot":""}