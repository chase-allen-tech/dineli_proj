{"version":3,"sources":["views/Calculator/index.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["Calculator","props","state","key","options","value","label","options1","handleSelect","bind","this","setState","window","scrollTo","className","style","marginBottom","Row","Col","span","marginTop","margin","striped","bordered","hovers","backgroundColor","colSpan","src","alt","marginLeft","width","map","el","Option","textAlign","paddingTop","color","type","borderColor","Component","_excluded","Table","React","forwardRef","_ref","ref","bsPrefix","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass"],"mappings":"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","file":"static/js/23.e77aadc4.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {Button, Input, Layout, Select} from \"element-react\"\r\nimport {Table as TableBs} from 'react-bootstrap'\r\n\r\n\r\nimport './Calculator.css'\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            key: \"dashboard\",\r\n            options: [{\r\n                value: 'Option1',\r\n                label: 'Calculate total capital'\r\n            },\r\n                {\r\n                    value: 'Option1',\r\n                    label: 'Calculate total capital'\r\n                },\r\n                {\r\n                    value: 'Option1',\r\n                    label: 'Calculate total capital'\r\n                },\r\n            ],\r\n            options1: [{\r\n                value: 'Option1',\r\n                label: 'chaque mois'\r\n            },\r\n                {\r\n                    value: 'Option1',\r\n                    label: 'chaque mois'\r\n                },\r\n                {\r\n                    value: 'Option1',\r\n                    label: 'chaque mois'\r\n                },\r\n            ],\r\n            value: ''\r\n        })\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n    }\r\n\r\n    handleSelect(key) {\r\n        this.setState({\r\n            key: key\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <div className=\"img-box img-box-calculator\">\r\n                    <div className=\"d-white d-font-black d-text-90\" style={{marginBottom: \"25%\"}}>\r\n                    </div>\r\n                </div>\r\n                <Layout.Row>\r\n                    <Layout.Col span=\"24\">\r\n                        <div className=\"grid-content bg-purple-dark\">\r\n                            <div className=\"d-white d-font-black d-text-90 text-center\" style={{marginTop: \"2%\"}}>\r\n                                Savings calculator\r\n                            </div>\r\n                        </div>\r\n                    </Layout.Col>\r\n                </Layout.Row>\r\n\r\n                <div style={{margin: \"6% 15% 0% 15%\"}}>\r\n                    <TableBs striped bordered hovers className={'calculator-table d-font-book'}>\r\n                        <thead style={{backgroundColor: \"#03ffa4\", margin: \"5% 2% 0% 5%\"}}>\r\n                        <tr>\r\n                            <th colSpan={2}><img src='imgs/calculator/calculator.png' alt='calculator'\r\n                                                 style={{marginLeft: \"1%\"}}/>\r\n                                <Select className={'d-font-book d-text-18'} value={this.state.value}\r\n                                        style={{width: \"85%\", margin: \"1% 0% 1% 2%\"}}>\r\n                                    {\r\n                                        this.state.options.map(el => {\r\n                                            return <Select.Option key={el.value} label={el.label}\r\n                                                                  value={el.value}/>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td style={{\r\n                                backgroundColor: \"RGB(51, 69, 77)\",\r\n                                textAlign: \"right\",\r\n                                paddingTop: \"2%\",\r\n                                width: \"50%\"\r\n                            }} className={'d-white'}>Starting placement:\r\n                            </td>\r\n                            <td style={{width: \"50%\"}}>\r\n                                <Input style={{width: \"50%\"}}/>\r\n                                <span className=\"icon-euro d-highlight d-font-book\"> €</span></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td style={{\r\n                                backgroundColor: \"RGB(51, 69, 77)\",\r\n                                textAlign: \"right\",\r\n                                paddingTop: \"2%\"\r\n                            }} className={'d-white'}>Periodic savings:\r\n                            </td>\r\n                            <td>\r\n                                <Input style={{width: \"50%\"}}/><span\r\n                                className=\"icon-euro d-highlight d-font-book\"> €\r\n                                        <Select className={'d-font-book'} value={this.state.value}\r\n                                                style={{width: \"40%\"}}>\r\n                                                {\r\n                                                    this.state.options1.map(el => {\r\n                                                        return <Select.Option key={el.value} label={el.label}\r\n                                                                              value={el.value}/>\r\n                                                    })\r\n                                                }\r\n                                        </Select>\r\n                                    </span>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        {/*-------------------------------------------------*/}\r\n                        <tr>\r\n                            <td style={{\r\n                                backgroundColor: \"RGB(51, 69, 77)\",\r\n                                textAlign: \"right\",\r\n                                paddingTop: \"2%\"\r\n                            }} className={'d-white'}>Duration of placement:\r\n                            </td>\r\n                            <td>\r\n                                <Input style={{width: \"50%\"}}/><span\r\n                                className=\"icon-euro d-highlight d-font-book\"> années</span>\r\n                            </td>\r\n                        </tr>\r\n                        {/*    -------------------------------*/}\r\n\r\n\r\n                        {/*-------------------------------------------------*/}\r\n                        <tr>\r\n                            <td style={{\r\n                                backgroundColor: \"RGB(51, 69, 77)\",\r\n                                textAlign: \"right\",\r\n                                paddingTop: \"2%\"\r\n                            }} className={'d-white'}>Expected annual rate of return:\r\n                            </td>\r\n                            <td>\r\n                                <Input style={{width: \"50%\"}}/><span\r\n                                className=\"icon-euro d-highlight d-font-book\"> %</span>\r\n                            </td>\r\n                        </tr>\r\n                        {/*    -------------------------------*/}\r\n\r\n\r\n                        {/*-------------------------------------------------*/}\r\n                        <tr>\r\n                            <td style={{\r\n                                backgroundColor: \"RGB(51, 69, 77)\",\r\n                                textAlign: \"right\",\r\n                                paddingTop: \"2%\"\r\n                            }} className={'d-white'}>Total capital:\r\n                            </td>\r\n                            <td>\r\n                                <Input style={{width: \"50%\"}}/><span\r\n                                className=\"icon-euro d-highlight d-font-book\"> €</span>\r\n                            </td>\r\n                        </tr>\r\n                        {/*    -------------------------------*/}\r\n\r\n\r\n                        {/*-------------------------------------------------*/}\r\n                        <tr>\r\n                            <td colSpan={2} className={'text-center'}>\r\n                                <Button className={'d-font-book d-content-highlight d-black'}\r\n                                        style={{marginLeft: \"6%\", color: '#000000'}}\r\n                                        type=\"success\">Calculate</Button>\r\n                                <Button className={'d-font-book d-white'}\r\n                                        style={{backgroundColor: \"RGB(51, 69, 77)\"}} type=\"success\">New\r\n                                    Calculation</Button>\r\n                            </td>\r\n                        </tr>\r\n                        {/*    -------------------------------*/}\r\n                        <tr style={{borderColor: \"black\"}}>\r\n                            .\r\n                        </tr>\r\n                        {/*-------------------------------------------------*/}\r\n                        <tr style={{borderColor: \"black\"}}>\r\n                            <td colSpan={2}>\r\n                            <span\r\n                                className=\"d-highlight d-font-bold d-text-48\">Three possible options</span>\r\n\r\n                                <span className={'d-white d-font-book'}>\r\n                                            <br/>You can<br/>\r\n                                            <br/>\r\n                                            calculate the capital at term that you will have at the end of your savings\r\n                                            plan (click on “calculate total capital”.<br/>\r\n                                            But if you know how much capital you will need in X years, you can, knowing\r\n                                            how much you can save per month<br/>\r\n                                            or year,<br/>\r\n                                            <br/>\r\n                                            calculate the initial capital you need, (click on \"calculate the\r\n                                            initial<br/>\r\n                                            payment\" or, knowing how much you can<br/>\r\n                                            save today,<br/>\r\n                                            <br/>\r\n                                            calculate the amount of periodic savings you can build.<br/>\r\n                                            <br/></span>\r\n                                <span className={'d-highlight d-font-book text-decoration-underline'}>The main savings products [complete file]<br/></span>\r\n\r\n                            </td>\r\n                        </tr>\r\n                        {/*    -------------------------------*/}\r\n                        </tbody>\r\n                    </TableBs>\r\n                </div>\r\n                {/*======================================================*/}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}