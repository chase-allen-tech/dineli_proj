{"version":3,"sources":["views/Admin/AdminUserNew.js","redux/actions/user.js"],"names":["rules","email","required","message","trigger","walletAddress","role","roles","AdminUserNew","props","formRef","useRef","dispatch","useDispatch","history","useHistory","useState","form","setForm","console","log","onFormChange","key","value","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","Item","label","prop","type","onChange","val","autoComplete","Object","keys","map","item","Option","textAlign","onClick","current","validate","valid","payload","assign","find","r","actionUserCreate","push","token","localStorage","getItem","JSON","parse","tokenData","callPost","then","response","Notification","success","title","ACTION_USER_ADD","catch","err","error","actionUserList","count","callGet","result","data","ACTION_USER_LIST","ACTION_USER_LIST_FAIL","actionUserUpdate","userData","ACTION_USER_UPDATE","actionUserUpdateCard","cardData","actionAuthUpdateCard","card","actionUserSetCurrent","user","ACTION_USER_SET_CURRENT"],"mappings":"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","file":"static/js/39.f199c835.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\"\r\nimport { Button, Form, Input, Layout, Select } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionUserCreate } from \"../../redux/actions/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst rules = {\r\n  email: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  walletAddress: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  role: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n};\r\n\r\nconst roles = {\r\n  \"user\": \"User\",\r\n  \"moderator\": \"Moderator\",\r\n  \"admin\": \"Admin\"\r\n}\r\n\r\nconst AdminUserNew = props => {\r\n\r\n  const formRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState({\r\n    email: '',\r\n    walletAddress: '',\r\n    role: '',\r\n  });\r\n\r\n  console.log(form.role);\r\n\r\n  const onFormChange = (key, value) => {\r\n    setForm({ ...form, [key]: value });\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      if(!valid) return;\r\n      let payload = Object.assign({}, form);\r\n      payload.role = Object.keys(roles).find(r => roles[r] === payload.role);\r\n      console.log('payload', payload)\r\n      dispatch(actionUserCreate(payload));\r\n      history.push('/admin/users');\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">User Detail</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Email\" prop=\"email\">\r\n                    <Input type=\"email\" value={form.email} onChange={val => onFormChange('email', val)} />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Wallet Address\" prop=\"walletAddress\">\r\n                    <Input type=\"text\" value={form.walletAddress} onChange={val => onFormChange('walletAddress', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Role\" prop=\"role\">\r\n                    <Select className=\"w-100\" value={form.role} onChange={val => onFormChange('role', val)}>\r\n                      {\r\n                        Object.keys(roles).map(item => <Select.Option value={roles[item]}>{roles[item]}</Select.Option>)\r\n                      }\r\n                    </Select>\r\n                  </Form.Item>\r\n                </div><div className=\"col-md-12\">\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Create</Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </Form>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminUserNew;","import {\r\n  ACTION_USER_ADD,\r\n  ACTION_USER_LIST,\r\n  ACTION_USER_LIST_FAIL,\r\n  ACTION_USER_SET_CURRENT,\r\n  ACTION_USER_UPDATE\r\n} from '../actionTypes/user'\r\nimport { actionAuthUpdateCard } from './auth'\r\n\r\nimport { callGet, callPost, } from '../../services/axios'\r\nimport { Notification } from 'element-react'\r\n\r\nconst token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))['accessToken'] : null\r\n\r\nexport const actionUserCreate = (tokenData) => (dispatch) => {\r\n  callPost('/api/admin/user', tokenData, token)\r\n    .then((response) => {\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: 'House Properties Submit Success!',\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_ADD,\r\n        payload: tokenData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserList = (count) => (dispatch) => {\r\n  return callGet(`/api/user?count=${count}`)\r\n    .then(function (response) {\r\n      let result = response.data\r\n      dispatch({\r\n        type: ACTION_USER_LIST,\r\n        payload: result,\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: ACTION_USER_LIST_FAIL,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdate = (userData) => dispatch => {\r\n  callPost('/api/admin/user/update', userData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch({\r\n        type: ACTION_USER_UPDATE,\r\n        payload: userData,\r\n      })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const actionUserUpdateCard = (cardData) => dispatch => {\r\n  callPost('/api/admin/user/update/card', cardData, token)\r\n    .then((response) => {\r\n      console.log('[res]', response);\r\n      Notification.success({\r\n        title: 'Success',\r\n        message: response.data.message,\r\n        type: 'success',\r\n      })\r\n      dispatch(actionAuthUpdateCard(cardData.card));\r\n    }).catch(err => {\r\n      console.log(err);\r\n      Notification.error({\r\n        title: 'Failed',\r\n        message: 'Transaction update failed. Please try again.',\r\n        type: 'Warning',\r\n      })\r\n    }\r\n  )\r\n} \r\n\r\nexport const actionUserSetCurrent = (user) => dispatch => {\r\n  dispatch({\r\n    type:ACTION_USER_SET_CURRENT,\r\n    payload: user\r\n  })\r\n}"],"sourceRoot":""}