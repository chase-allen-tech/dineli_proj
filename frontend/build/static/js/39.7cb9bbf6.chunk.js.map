{"version":3,"sources":["views/Admin/AdminCredential.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["rules","blockchainId","required","message","trigger","infuraProjectEndpoint","walletPublicKey","walletPrivateKey","paypalAppClientId","coinbaseApiKey","hellosignApiKey","hellosignClientId","AdminCredentialNew","props","dispatch","useDispatch","formRef","useRef","credentials","useSelector","state","credential","credentialData","useState","id","form","setForm","useEffect","length","curr","toString","onFormChange","key","value","formClone","Object","assign","className","style","width","bottom","delay","ref","model","labelWidth","labelPosition","border","margin","borderRadius","Row","fontSize","Col","span","src","alt","height","Item","label","prop","type","onChange","val","autoComplete","textAlign","onClick","current","validate","valid","payload","actionCredentialUpdate","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"mLAMMA,EAAQ,CACZC,aAAc,CAAC,CAAEC,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SAC7EC,sBAAuB,CAAC,CAAEH,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SACtFE,gBAAiB,CAAC,CAAEJ,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SAChFG,iBAAkB,CAAC,CAAEL,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SACjFI,kBAAmB,CAAC,CAAEN,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SAClFK,eAAgB,CAAC,CAAEP,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SAC/EM,gBAAiB,CAAC,CAAER,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,SAChFO,kBAAmB,CAAC,CAAET,UAAU,EAAMC,QAAS,yBAA0BC,QAAS,UAwIrEQ,UArIY,SAAAC,GAEzB,IAAMC,EAAWC,cACXC,EAAUC,mBACVC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,kBAE1D,EAAwBC,mBAAS,CAC/BC,GAAI,KACJvB,aAAc,KACdI,sBAAuB,KACvBC,gBAAiB,KACjBC,iBAAkB,KAClBC,kBAAmB,KACnBC,eAAgB,KAChBC,gBAAiB,KACjBC,kBAAmB,OATrB,mBAAOc,EAAP,KAAaC,EAAb,KAYAC,qBAAU,WACR,GAAIT,EAAYU,OAAQ,CACtB,IAAMC,EAAOX,EAAY,GACzBQ,EAAQ,CACNF,GAAIK,EAAKL,GACTvB,aAAc4B,EAAK5B,aAAa6B,WAChCzB,sBAAuBwB,EAAKxB,sBAC5BC,gBAAiBuB,EAAKvB,gBACtBC,iBAAkBsB,EAAKtB,iBACvBC,kBAAmBqB,EAAKrB,kBACxBC,eAAgBoB,EAAKpB,eACrBC,gBAAiBmB,EAAKnB,gBACtBC,kBAAmBkB,EAAKlB,uBAG3B,CAACO,IAEJ,IAAMa,EAAe,SAACC,EAAKC,GACzB,IAAIC,EAAYC,OAAOC,OAAO,GAAIX,GAClCS,EAAUF,GAAOC,EACjBP,EAAQQ,IAsBV,OACE,qBAAKG,UAAU,+EAAf,SACE,qBAAKC,MAAO,CAAEC,MAAO,OAArB,SACE,cAAC,IAAD,CAAMC,QAAM,EAACC,MAAO,IAApB,SACE,eAAC,OAAD,CAAMC,IAAK1B,EAAS2B,MAAOlB,EAAMzB,MAAOA,EAAO4C,WAAW,MAAMP,UAAU,6BAA6BQ,cAAe,MAAOP,MAAO,CAAEQ,OAAQ,oBAAqBC,OAAQ,GAAIC,aAAc,IAA7L,UACE,cAAC,SAAOC,IAAR,CAAYX,MAAO,CAAEY,SAAU,GAAIH,OAAQ,qBAA3C,SACE,cAAC,SAAOI,IAAR,CAAYC,KAAK,KAAjB,SACE,sBAAKf,UAAU,0CAA0CC,MAAO,CAAEU,aAAc,qBAAhF,UACE,qBAAKX,UAAU,OAAf,+BACA,qBAAKA,UAAU,yCAAf,SACE,qBAAKgB,IAAI,iBAAiBC,IAAI,OAAOhB,MAAO,CAAEiB,OAAQ,mBAM9D,qBAAKlB,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,gBAAgBC,KAAK,eAAtC,SACE,cAAC,QAAD,CAAOC,KAAK,SAAS1B,MAAOR,EAAKxB,aAAc2D,SAAU,SAAAC,GAAG,OAAI9B,EAAa,eAAgB8B,IAAMC,aAAa,YAGpH,qBAAKzB,UAAU,WAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,8BAA8BC,KAAK,wBAApD,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKpB,sBAAuBuD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,wBAAyB8B,IAAMC,aAAa,YAGxH,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,oBAAoBC,KAAK,kBAA1C,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKnB,gBAAiBsD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,kBAAmB8B,IAAMC,aAAa,YAG5G,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,qBAAqBC,KAAK,mBAA3C,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKlB,iBAAkBqD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,mBAAoB8B,IAAMC,aAAa,YAG9G,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,uBAAuBC,KAAK,oBAA7C,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKjB,kBAAmBoD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,oBAAqB8B,IAAMC,aAAa,YAGhH,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,mBAAmBC,KAAK,iBAAzC,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKhB,eAAgBmD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,iBAAkB8B,IAAMC,aAAa,YAG1G,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,oBAAoBC,KAAK,kBAA1C,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKf,gBAAiBkD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,kBAAmB8B,IAAMC,aAAa,YAG5G,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWC,MAAM,sBAAsBC,KAAK,oBAA5C,SACE,cAAC,QAAD,CAAOzB,MAAOR,EAAKd,kBAAmBiD,SAAU,SAAAC,GAAG,OAAI9B,EAAa,oBAAqB8B,IAAMC,aAAa,YAIhH,qBAAKzB,UAAU,YAAf,SACE,cAAC,OAAKmB,KAAN,CAAWlB,MAAO,CAAEyB,UAAW,UAA/B,SACE,cAAC,SAAD,CAAQJ,KAAK,UAAUK,QAhFxB,WACfhD,EAAQiD,QAAQC,UAAS,SAAAC,GACvB,GAAKA,EAAL,CACA,IAAIC,EAAU,CACZ5C,GAAIC,EAAKD,GACTvB,aAAcwB,EAAKxB,aACnBI,sBAAuBoB,EAAKpB,sBAC5BC,gBAAiBmB,EAAKnB,gBACtBC,iBAAkBkB,EAAKlB,iBACvBC,kBAAmBiB,EAAKjB,kBACxBC,eAAgBgB,EAAKhB,eACrBC,gBAAiBe,EAAKf,gBACtBC,kBAAmBc,EAAKd,mBAG1BG,EAASuD,YAAuBD,SAiElB,wC,gFCtIL,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYzC,OAAOoC,GAAjE,CACA,IAAIM,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKZ,EAAII,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGjD,QAETuC,GAAKK,EAAKjD,SAAW4C,GAH8CM,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBN,EAAKC,IAAM,OAAAgB,EAAA,GAA2BjB,EAAKC,IGLjF,WACb,MAAM,IAAIiB,UAAU,6IHIgF","file":"static/js/39.7cb9bbf6.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\r\nimport { Button, Form, Input, Layout } from \"element-react\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCredentialUpdate } from \"../../redux/actions/credential\";\r\n\r\nconst rules = {\r\n  blockchainId: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  infuraProjectEndpoint: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  walletPublicKey: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  walletPrivateKey: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  paypalAppClientId: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  coinbaseApiKey: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  hellosignApiKey: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n  hellosignClientId: [{ required: true, message: 'This field is required', trigger: 'blur' }],\r\n};\r\n\r\nconst AdminCredentialNew = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const formRef = useRef();\r\n  const credentials = useSelector(state => state.credential.credentialData);\r\n\r\n  const [form, setForm] = useState({\r\n    id: null,\r\n    blockchainId: null,\r\n    infuraProjectEndpoint: null,\r\n    walletPublicKey: null,\r\n    walletPrivateKey: null,\r\n    paypalAppClientId: null,\r\n    coinbaseApiKey: null,\r\n    hellosignApiKey: null,\r\n    hellosignClientId: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (credentials.length) {\r\n      const curr = credentials[0];\r\n      setForm({\r\n        id: curr.id,\r\n        blockchainId: curr.blockchainId.toString(),\r\n        infuraProjectEndpoint: curr.infuraProjectEndpoint,\r\n        walletPublicKey: curr.walletPublicKey,\r\n        walletPrivateKey: curr.walletPrivateKey,\r\n        paypalAppClientId: curr.paypalAppClientId,\r\n        coinbaseApiKey: curr.coinbaseApiKey,\r\n        hellosignApiKey: curr.hellosignApiKey,\r\n        hellosignClientId: curr.hellosignClientId\r\n      })\r\n    }\r\n  }, [credentials]);\r\n\r\n  const onFormChange = (key, value) => {\r\n    let formClone = Object.assign({}, form);\r\n    formClone[key] = value;\r\n    setForm(formClone);\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    formRef.current.validate(valid => {\r\n      if (!valid) return;\r\n      let payload = {\r\n        id: form.id,\r\n        blockchainId: form.blockchainId,\r\n        infuraProjectEndpoint: form.infuraProjectEndpoint,\r\n        walletPublicKey: form.walletPublicKey,\r\n        walletPrivateKey: form.walletPrivateKey,\r\n        paypalAppClientId: form.paypalAppClientId,\r\n        coinbaseApiKey: form.coinbaseApiKey,\r\n        hellosignApiKey: form.hellosignApiKey,\r\n        hellosignClientId: form.hellosignClientId\r\n      }\r\n\r\n      dispatch(actionCredentialUpdate(payload));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center overflow-hidden\">\r\n      <div style={{ width: '80%' }}>\r\n        <Fade bottom delay={200}>\r\n          <Form ref={formRef} model={form} rules={rules} labelWidth=\"100\" className=\"login-ruleForm d-font-bold\" labelPosition={\"top\"} style={{ border: \"2px solid #03ffa4\", margin: 20, borderRadius: 10 }}>\r\n            <Layout.Row style={{ fontSize: 25, margin: \"-1px 0px 15px 0px\" }}>\r\n              <Layout.Col span=\"24\">\r\n                <div className=\"grid-content d-content-highlight d-flex\" style={{ borderRadius: \"10px 10px 1px 1px\" }}>\r\n                  <div className=\"ms-3\">Credential Detail</div>\r\n                  <div className=\"ms-auto me-3 d-flex align-items-center\">\r\n                    <img src=\"imgs/logo3.png\" alt='logo' style={{ height: \"35px\" }} />\r\n                  </div>\r\n                </div>\r\n              </Layout.Col>\r\n            </Layout.Row>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <Form.Item label=\"Blockchain ID\" prop=\"blockchainId\">\r\n                    <Input type=\"number\" value={form.blockchainId} onChange={val => onFormChange('blockchainId', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                  <Form.Item label=\"Infura Project URL Endpoint\" prop=\"infuraProjectEndpoint\">\r\n                    <Input value={form.infuraProjectEndpoint} onChange={val => onFormChange('infuraProjectEndpoint', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Wallet Public Key\" prop=\"walletPublicKey\">\r\n                    <Input value={form.walletPublicKey} onChange={val => onFormChange('walletPublicKey', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Wallet Private Key\" prop=\"walletPrivateKey\">\r\n                    <Input value={form.walletPrivateKey} onChange={val => onFormChange('walletPrivateKey', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Paypal App Client ID\" prop=\"paypalAppClientId\">\r\n                    <Input value={form.paypalAppClientId} onChange={val => onFormChange('paypalAppClientId', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Coinbase API Key\" prop=\"coinbaseApiKey\">\r\n                    <Input value={form.coinbaseApiKey} onChange={val => onFormChange('coinbaseApiKey', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Hellosign API Key\" prop=\"hellosignApiKey\">\r\n                    <Input value={form.hellosignApiKey} onChange={val => onFormChange('hellosignApiKey', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item label=\"Hellosign Client ID\" prop=\"hellosignClientId\">\r\n                    <Input value={form.hellosignClientId} onChange={val => onFormChange('hellosignClientId', val)} autoComplete=\"off\" />\r\n                  </Form.Item>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                  <Form.Item style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"success\" onClick={onSubmit}>Update</Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminCredentialNew;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}